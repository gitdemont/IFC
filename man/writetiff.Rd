% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/writetiff.R
\name{writetiff}
\alias{writetiff}
\title{Tiff Writer}
\usage{
writetiff(image, ..., what = "uint8")
}
\arguments{
\item{image}{a matrix or array or representing the image:\cr
-2D matrix [h,w] will be written as single grayscale [h,w] IFD (Image Field Directory),\cr
-3D array [h,w,c] will be written as single IFD of multichannel [h,w,c] grayscale or RGB if \code{rgb = TRUE},\cr
-4D array [h,w,c,f] will be written as multiple (multiframe) IFD of multichannel [h,w,c] grayscale or RGB if \code{rgb = TRUE},\cr
with h=height, w=width, c=channel, f=frame.}

\item{...}{other arguments to be passed to \code{\link{writemulti}}.}

\item{what}{bits mode used to store image. Default is \code{"uint8"}. Allowed are \code{"uint8"}, \code{"int8"}, \code{"uint16"}, \code{"int16"}, \code{"uint32"}, \code{"int32"}, \code{"float"} and \code{"double"}.}
}
\value{
It invisibly returns full path of exported file or a raw vector when \code{write_to = raw(0)} otherwise.
}
\description{
Writes TIFF from [0-1] Normalized Image.
}
\details{
it is aimed to simplify the use of \code{\link{writemulti}} by requiring minimal input from user.\cr
/!\ Note that image should range from 0 to 1.
/!\ Note that \code{as.rgb} that will be automatically filled with \code{TRUE} if \code{image} is 3D array with 3rd dimension being of length 3. So, if an RGB output is not desired, you should provide a 4D array.
}
\examples{
if(requireNamespace("IFCdata", quietly = TRUE)) {
  ## use a cif file
  file_cif <- system.file("extdata", "example.cif", package = "IFCdata")
  ## extract image values from cif file as [0-1] RGB 3D array
  img = ExtractImages_toMatrix(fileName = file_cif, mode = "rgb", objects = 3, selection = 3,
                               force_width = FALSE, size = c(0,0))
  ## create RGB tiff file
  file_tif = writetiff(image = img[[1]][[1]], write_to = tempfile(fileext = ".tif"))
  ## inspect exported file
  IFD = getIFD(file_tif)
  sapply(IFD[[1]]$tags, FUN = function(x) x)
} else {
  message(sprintf('Please run `install.packages("IFCdata", repos = "\%s", type = "source")` \%s',
                  'https://gitdemont.github.io/IFCdata/',
                  'to install extra files required to run this example.'))
}
}
